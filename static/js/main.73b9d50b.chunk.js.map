{"version":3,"sources":["commons/Loading.js","pages/chunks/WorldData.js","pages/chunks/SingleCountry.js","pages/Home.js","commons/Header.js","App.js","serviceWorker.js","index.js"],"names":["Loading","style","width","textAlign","paddingTop","type","color","height","WorldData","props","NumTextStyle","fontSize","Container","Row","Col","sm","md","Card","border","Header","className","backgroundColor","Body","Title","data","cases","deaths","recovered","span","offset","todayCases","todayDeaths","SingleCountry","useState","selectedCountry","setSelectedCountry","populateCountries","countries","map","elem","i","key","value","country","findCountry","filter","mapCountryData","paddingBottom","alt","src","countryInfo","flag","marginRight","textTransform","active","buildPie","series","options","chart","labels","responsive","breakpoint","legend","position","Form","Group","as","controlId","Control","onChange","e","target","Home","worldData","setWorldData","setCountries","loading","setLoading","delay","ms","Promise","res","setTimeout","useEffect","Axios","all","get","then","response","catch","err","console","log","finally","a","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.73b9d50b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{width: \"100%\", textAlign: \"center\", paddingTop: \"30px\"}}>\r\n            <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport React from 'react'\r\n\r\nfunction WorldData(props) {\r\n    const NumTextStyle = {\r\n        fontSize: '3rem',\r\n        textAlign: \"center\",\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row style={{ paddingTop: '2rem' }}>\r\n                <Col sm={12} md={4}>\r\n                    <Card border=\"secondary\">\r\n                        <Card.Header className=\"text-white\" style={{ backgroundColor: \"#6c757d\", fontSize: '1.4rem', textAlign: \"center\" }}>Casi Totali</Card.Header>\r\n                        <Card.Body>\r\n                        <Card.Title className=\"text-secondary\" style={NumTextStyle}>{props.data.cases}</Card.Title>\r\n                        \r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12} md={4}>\r\n                    <Card border=\"danger\">\r\n                        <Card.Header className=\"text-white\" style={{ backgroundColor: \"#dc3545\", fontSize: '1.4rem', textAlign: \"center\" }}>Decessi Totali</Card.Header>\r\n                        <Card.Body>\r\n                        <Card.Title className=\"text-danger\" style={NumTextStyle}>{props.data.deaths}</Card.Title>\r\n                        \r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12} md={4}>\r\n                    <Card border=\"success\">\r\n                        <Card.Header className=\"text-white\" style={{ backgroundColor: \"#28a745\", fontSize: '1.4rem', textAlign: \"center\" }}>Guariti Totali</Card.Header>\r\n                        <Card.Body>\r\n                        <Card.Title className=\"text-success\" style={NumTextStyle}>{props.data.recovered}</Card.Title>\r\n                        \r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row style={{ paddingTop: '2rem' }}>\r\n                <Col sm={12} md={{span: 4, offset: 1}}>\r\n                    <Card border=\"secondary\">\r\n                        <Card.Header className=\"text-white\" style={{ backgroundColor: \"#6c757d\", fontSize: '1.4rem', textAlign: \"center\" }}>Casi Giornalieri</Card.Header>\r\n                        <Card.Body>\r\n                        <Card.Title className=\"text-secondary\" style={NumTextStyle}>{props.data.todayCases}</Card.Title>\r\n                        \r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12} md={{span: 4, offset: 1}}>\r\n                    <Card border=\"danger\">\r\n                        <Card.Header className=\"text-white\" style={{ backgroundColor: \"#dc3545\", fontSize: '1.4rem', textAlign: \"center\" }}>Decessi Giornalieri</Card.Header>\r\n                        <Card.Body>\r\n                        <Card.Title className=\"text-danger\" style={NumTextStyle}>{props.data.todayDeaths}</Card.Title>\r\n                        \r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default WorldData\r\n","import React, { useState } from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Chart from 'react-apexcharts';\r\nimport '../../commons/Style.css'\r\n\r\n\r\nfunction SingleCountry(props) {\r\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\r\n\r\n  const populateCountries = props.countries.map((elem, i) => {\r\n    return (\r\n      <option key={i} value={elem.country}>\r\n        {elem.country}\r\n      </option>\r\n    );\r\n  });\r\n  const findCountry = props.countries.filter((elem) => {\r\n    return elem.country === selectedCountry;\r\n  });\r\n\r\n  const mapCountryData = findCountry.map((elem, i) => {\r\n    return (\r\n      <div key={i}>\r\n      <Row style={{ paddingBottom: \"2rem\" }}>\r\n          <Col className=\"text-center title\" sm={12} md={12}>\r\n            <img alt=\"\" src={elem.countryInfo.flag} style={{ width: \"30px\", height: \"25px\", marginRight: \"15px\" }} />  \r\n            <span style={{ textTransform: \"uppercase\" }}>{elem.country}</span>\r\n          </Col> \r\n        </Row> \r\n        <Row className=\"cRow\">\r\n          <Col className=\"text-left\" sm={6} md={6}><b>Totali: </b></Col> \r\n          <Col className=\"text-right\" sm={6} md={6}>{elem.cases}</Col> \r\n        </Row> \r\n        <Row className=\"cRow\">\r\n          <Col className=\"text-left\" sm={6} md={6}><b>Attivi: </b></Col> \r\n          <Col className=\"text-right\" sm={6} md={6}>{elem.active}</Col> \r\n        </Row> \r\n        <Row className=\"cRow\">\r\n          <Col className=\"text-left\" sm={6} md={6}><b>Decessi: </b></Col> \r\n          <Col className=\"text-right\" sm={6} md={6}>{elem.deaths}</Col> \r\n        </Row> \r\n        <Row className=\"cRow\">\r\n          <Col className=\"text-left\" sm={6} md={6}><b>Guariti: </b></Col> \r\n          <Col className=\"text-right\" sm={6} md={6}>{elem.recovered}</Col> \r\n        </Row> \r\n        <Row className=\"cRow\">\r\n          <Col className=\"text-left\" sm={6} md={6}><b>Casi giornalieri: </b></Col> \r\n          <Col className=\"text-right\" sm={6} md={6}>{elem.todayCases}</Col> \r\n        </Row> \r\n        <Row className=\"cRow\">\r\n          <Col className=\"text-left\" sm={6} md={6}><b>Decessi giornalieri: </b></Col> \r\n          <Col className=\"text-right\" sm={6} md={6}>{elem.todayDeaths}</Col> \r\n        </Row> \r\n        </div>\r\n    );\r\n  });\r\n\r\n  const buildPie = findCountry.map((elem, i) =>{\r\n    const active = elem.active;\r\n    const deaths = elem.deaths;\r\n    const recovered = elem.recovered;\r\n    return ({\r\n      series: [active, deaths, recovered],\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: 'pie',\r\n        },\r\n        labels: ['Attivi', 'Decessi', 'Guariti'],\r\n        responsive: [{\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }]\r\n      },\r\n    });\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row style={{ paddingTop: \"2rem\" }}>\r\n          <Col sm={12} md={12}>\r\n            <Form>\r\n              <Form.Group as={Row} controlId=\"test\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={selectedCountry}\r\n                  onChange={(e) => setSelectedCountry(e.target.value)}\r\n                >\r\n                  <option>Select Country...</option>\r\n                  {populateCountries}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ paddingTop: \"2rem\" }}>\r\n            <Col className=\"countryDataTab\" sm={12} md={4}>\r\n              {selectedCountry !== \"\" && (\r\n                mapCountryData\r\n              )}\r\n            </Col>\r\n            <Col className=\"text-center\" sm={12} md={{span: 6, offset: 1}}>\r\n              {selectedCountry !== \"\" && (\r\n                <Chart options={buildPie[0].options} series={buildPie[0].series} type=\"pie\" width={400} />\r\n              )}\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SingleCountry;\r\n","import React, { useState, useEffect } from 'react'\r\nimport Loading from '../commons/Loading'\r\nimport WorldData from './chunks/WorldData'\r\nimport SingleCountry from \"./chunks/SingleCountry\";\r\nimport Axios from 'axios';\r\n\r\nfunction Home() {\r\n    const [worldData, setWorldData] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n    useEffect(() => {\r\n        \r\n        Axios.all([\r\n            Axios.get(\"https://corona.lmao.ninja/v2/all\"),\r\n            Axios.get(\"https://corona.lmao.ninja/v2/countries\"),\r\n        ])\r\n        .then((response) => {\r\n            setWorldData(response[0].data);\r\n            setCountries(response[1].data);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n        .finally( async () => {\r\n            await delay(1500);\r\n            setLoading(false);\r\n        })\r\n        \r\n    }, []);\r\n\r\n    return (\r\n       <div style={{ paddingBottom: \"39px\"}}>\r\n           {loading === true && (\r\n               <Loading />\r\n           )}\r\n           {loading === false && (\r\n               <>\r\n               <h2 style={{ textAlign: \"center\", textTransform: \"uppercase\", paddingTop: \"30px\" }}>Dati Globali</h2>\r\n               <WorldData data={worldData} />\r\n               <h2 style={{ textAlign: \"center\", textTransform: \"uppercase\", paddingTop: \"30px\" }}>Scegli Nazione</h2>\r\n               <SingleCountry countries={countries} />\r\n               </>\r\n           )}\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\">Daily Covid Tracker</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                \r\n                </Nav>\r\n                <Nav>\r\n                <Nav.Link href=\"https://github.com/Mirkoyk/\">Github</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Home from './pages/Home'\nimport Header from './commons/Header'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}